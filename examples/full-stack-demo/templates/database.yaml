apiVersion: cutepod.io/v1
kind: CuteContainer
metadata:
  name: {{ .Values.database.name }}
  labels:
    app: {{ .Values.app.name }}
    component: database
    tier: backend
    version: {{ .Values.app.version }}
spec:
  image: {{ .Values.database.image }}
  command: []
  args: []
  env:
    - name: POSTGRES_USER
      valueFrom:
        secretKeyRef:
          name: {{ .Values.secrets.database.name }}
          key: username
    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: {{ .Values.secrets.database.name }}
          key: password
    - name: POSTGRES_DB
      valueFrom:
        secretKeyRef:
          name: {{ .Values.secrets.database.name }}
          key: database
    - name: PGDATA
      value: /var/lib/postgresql/data/pgdata
  ports:
    - containerPort: {{ .Values.database.port }}
      hostPort: 0  # Let Podman assign a random host port
      protocol: TCP
  volumes:
    - name: {{ .Values.volumes.database.name }}
      mountPath: /var/lib/postgresql/data
      readOnly: false
    - name: {{ .Values.volumes.logs.name }}
      mountPath: /var/log/postgresql
      readOnly: false
  networks:
    - {{ .Values.network.name }}
  secrets:
    - name: {{ .Values.secrets.database.name }}
      env: true
  restartPolicy: always
  healthCheck:
    test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
    interval: 30s
    timeout: 10s
    retries: 3
    startPeriod: 60s
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 256Mi
      cpu: 250m
  securityContext:
    runAsUser: 999
    runAsGroup: 999
    fsGroup: 999